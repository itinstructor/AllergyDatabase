name: Android Build

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-debug-apk:
    name: Build Debug APK
    if: "!startsWith(github.ref, 'refs/tags/')"
    runs-on: ubuntu-22.04
    timeout-minutes: 50
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git zip unzip openjdk-11-jdk python3-venv libssl-dev libffi-dev libncurses5 libncurses5-dev libtinfo5

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install buildozer cython setuptools wheel

      - name: Cache build dependencies
        uses: actions/cache@v4
        with:
          path: |
            .buildozer
            ~/.gradle
            ~/.local/share/python-for-android
            ~/.cache/pip
          key: buildozer-debug-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            buildozer-debug-${{ runner.os }}-

      - name: Build debug APK
        env:
          ANDROID_ACCEPT_SDK_LICENSE: "true"
        run: buildozer --verbose android debug

      - name: List build outputs (debug)
        if: success()
        run: ls -R bin || true

      - name: Upload APK artifact
        uses: actions/upload-artifact@v4
        with:
          name: allergy-database-debug-apk
          path: bin/*.apk
          if-no-files-found: error

      - name: Summarize build environment
        if: always()
        run: |
          echo 'Python version:' $(python --version)
          echo 'Java version:' $(java -version 2>&1 | head -n1)
          echo 'Disk usage:'
          df -h .

  build-release-aab:
    name: Build Release AAB
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-22.04
    timeout-minutes: 50
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential git zip unzip openjdk-11-jdk python3-venv libssl-dev libffi-dev libncurses5 libncurses5-dev libtinfo5

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install buildozer cython setuptools wheel

      - name: Cache build dependencies
        uses: actions/cache@v4
        with:
          path: |
            .buildozer
            ~/.gradle
            ~/.local/share/python-for-android
            ~/.cache/pip
          key: buildozer-release-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            buildozer-release-${{ runner.os }}-

      - name: Decode keystore
        env:
          KEYSTORE_B64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          if [ -n "$KEYSTORE_B64" ]; then
            echo "$KEYSTORE_B64" | base64 --decode > release.keystore
          else
            echo "No keystore provided; aborting"; exit 1
          fi

      - name: Build release AAB
        env:
          ANDROID_ACCEPT_SDK_LICENSE: "true"
          ANDROID_KEYSTORE: release.keystore
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: buildozer --verbose android release

      - name: Upload AAB artifact
        uses: actions/upload-artifact@v4
        with:
          name: allergy-database-release-aab
          path: bin/*.aab
          if-no-files-found: error
